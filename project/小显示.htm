<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\小显示.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\小显示.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Wed Dec 28 14:49:36 2016
<BR><P>
<H3>Maximum Stack Usage =        160 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Init_Ram &rArr; Cal_Clk_Reload &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[0]">Reset_Handler</a>
 <LI><a href="#[1]">NmiSR</a>
 <LI><a href="#[2]">FaultISR</a>
 <LI><a href="#[3]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[21]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">SysCtlDelay</a><BR>
 <LI><a href="#[1]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NmiSR</a><BR>
 <LI><a href="#[2]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">FaultISR</a><BR>
 <LI><a href="#[3]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[8]">ADC0Handler</a> from interrupt_api.o(i.ADC0Handler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[12]">CAN0Handler</a> from interrupt_api.o(i.CAN0Handler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[13]">CAN1Handler</a> from interrupt_api.o(i.CAN1Handler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[2]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[5]">GPIOAHandler</a> from interrupt_api.o(i.GPIOAHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[1a]">GPIOMHandler</a> from interrupt_api.o(i.GPIOMHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[1b]">GPIONHandler</a> from interrupt_api.o(i.GPIONHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[3]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 94 times from startup_rvmdk.o(RESET)
 <LI><a href="#[1]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[4]">SysTickIntHandler</a> from interrupt_api.o(i.SysTickIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[a]">Timer0AIntHandler</a> from interrupt_api.o(i.Timer0AIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[b]">Timer0BIntHandler</a> from interrupt_api.o(i.Timer0BIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[c]">Timer1AIntHandler</a> from interrupt_api.o(i.Timer1AIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[d]">Timer1BIntHandler</a> from interrupt_api.o(i.Timer1BIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[e]">Timer2AIntHandler</a> from interrupt_api.o(i.Timer2AIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[f]">Timer2BIntHandler</a> from interrupt_api.o(i.Timer2BIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[10]">Timer3AIntHandler</a> from interrupt_api.o(i.Timer3AIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[11]">Timer3BIntHandler</a> from interrupt_api.o(i.Timer3BIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[17]">Timer4AIntHandler</a> from interrupt_api.o(i.Timer4AIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[18]">Timer4BIntHandler</a> from interrupt_api.o(i.Timer4BIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[19]">Timer5AIntHandler</a> from interrupt_api.o(i.Timer5AIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[6]">UART0IntHandler</a> from interrupt_api.o(i.UART0IntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[7]">UART1IntHandler</a> from interrupt_api.o(i.UART1IntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[14]">UART3IntHandler</a> from interrupt_api.o(i.UART3IntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[15]">UART5IntHandler</a> from interrupt_api.o(i.UART5IntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[16]">UART6IntHandler</a> from interrupt_api.o(i.UART6IntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[9]">WatchDogHandler</a> from interrupt_api.o(i.WatchDogHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[1d]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[1c]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[b2]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[38]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b3]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b4]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b5]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b6]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b7]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[21]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mtr_Numb
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Pll
</UL>

<P><STRONG><a name="[9b]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterDisable
</UL>

<P><STRONG><a name="[b8]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[9d]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[b9]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[ba]"></a>CPUbasepriSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[bb]"></a>CPUbasepriGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[23]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ram
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[bc]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[22]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[be]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[5b]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Space_StrCpy
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_STD_ENG_CNT_VAL
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
</UL>

<P><STRONG><a name="[25]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_STD_ENG_CNT_VAL
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Com
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
</UL>

<P><STRONG><a name="[27]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_STD_ENG_CNT_VAL
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Com
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_STD_ENG_CNT_VAL
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Com
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Com
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_STD_ENG_CNT_VAL
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
</UL>

<P><STRONG><a name="[43]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_STD_ENG_CNT_VAL
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ram
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Com
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
</UL>

<P><STRONG><a name="[ae]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[c0]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Com
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Com
</UL>

<P><STRONG><a name="[c1]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[28]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[c2]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[c3]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[c4]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[31]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[2b]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[2a]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[20]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[c6]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[8]"></a>ADC0Handler</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, interrupt_api.o(i.ADC0Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC0Handler &rArr; ADCSequenceDataGet
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceDataGet
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADCIntClear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, adc.o(i.ADCIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0Handler
</UL>

<P><STRONG><a name="[3a]"></a>ADCSequenceDataGet</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, adc.o(i.ADCSequenceDataGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADCSequenceDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0Handler
</UL>

<P><STRONG><a name="[12]"></a>CAN0Handler</STRONG> (Thumb, 348 bytes, Stack size 16 bytes, interrupt_api.o(i.CAN0Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CAN0Handler &rArr; CAN_Rx_Msg &rArr; CANDataRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANStatusGet
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntStatus
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntClear
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANErrCntrGet
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Rx_Msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>CAN1Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt_api.o(i.CAN1Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>CAN1_RxMsg_Set</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, usr_lib.o(i.CAN1_RxMsg_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CAN1_RxMsg_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAN1MsgRam
</UL>

<P><STRONG><a name="[6e]"></a>CANBitRateSet</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, can.o(i.CANBitRateSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CANBitRateSet
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN0
</UL>

<P><STRONG><a name="[40]"></a>CANDataRegRead</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, usr_lib.o(i.CANDataRegRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CANDataRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Rx_Msg
</UL>

<P><STRONG><a name="[6c]"></a>CANDisable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, can.o(i.CANDisable))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN0
</UL>

<P><STRONG><a name="[71]"></a>CANEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, can.o(i.CANEnable))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN0
</UL>

<P><STRONG><a name="[3d]"></a>CANErrCntrGet</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, can.o(i.CANErrCntrGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CANErrCntrGet
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0Handler
</UL>

<P><STRONG><a name="[6d]"></a>CANInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, can.o(i.CANInit))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN0
</UL>

<P><STRONG><a name="[3f]"></a>CANIntClear</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, can.o(i.CANIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0Handler
</UL>

<P><STRONG><a name="[6f]"></a>CANIntEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, can.o(i.CANIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN0
</UL>

<P><STRONG><a name="[3b]"></a>CANIntStatus</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, can.o(i.CANIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0Handler
</UL>

<P><STRONG><a name="[3c]"></a>CANStatusGet</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, can.o(i.CANStatusGet))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN0
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0Handler
</UL>

<P><STRONG><a name="[a0]"></a>CAN_RxMsg_Set</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, usr_lib.o(i.CAN_RxMsg_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CAN_RxMsg_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MsgRam
</UL>

<P><STRONG><a name="[3e]"></a>CAN_Rx_Msg</STRONG> (Thumb, 174 bytes, Stack size 28 bytes, usr_lib.o(i.CAN_Rx_Msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CAN_Rx_Msg &rArr; CANDataRegRead
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANDataRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0Handler
</UL>

<P><STRONG><a name="[41]"></a>Cal_Clk_Reload</STRONG> (Thumb, 788 bytes, Stack size 56 bytes, clk_err.o(i.Cal_Clk_Reload))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Cal_Clk_Reload &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerMatchSet
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDisable
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ram
</UL>

<P><STRONG><a name="[86]"></a>Cal_Gp_Relaod</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, eng_err.o(i.Cal_Gp_Relaod))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ram
</UL>

<P><STRONG><a name="[4b]"></a>Cal_STD_ENG_CNT_VAL</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, eng_err.o(i.Cal_STD_ENG_CNT_VAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Cal_STD_ENG_CNT_VAL &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_N_Buf
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ram
</UL>

<P><STRONG><a name="[4d]"></a>Check_SMtr_Tab_Sts</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, init.o(i.Check_SMtr_Tab_Sts))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Check_SMtr_Tab_Sts
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashErase
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ram
</UL>

<P><STRONG><a name="[4f]"></a>DZPLS_Interrupt_Pr</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, interrupt_api.o(i.DZPLS_Interrupt_Pr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DZPLS_Interrupt_Pr
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerValueGet
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer5AIntHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4BIntHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4AIntHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer3BIntHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer3AIntHandler
</UL>

<P><STRONG><a name="[51]"></a>ELSC_PLS_IN_DEN</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, eng_err.o(i.ELSC_PLS_IN_DEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ELSC_PLS_IN_DEN &rArr; GPIOPinTypeTimer &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerMatchSet
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntEnable
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDisable
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerControlEvent
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENG_PLS_IN_Pr
</UL>

<P><STRONG><a name="[55]"></a>ENG_PLS_IN_Pr</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, eng_err.o(i.ENG_PLS_IN_Pr))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ENG_PLS_IN_Pr &rArr; ELSC_PLS_IN_DEN &rArr; GPIOPinTypeTimer &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDT_PLS_IN_DEN
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELSC_PLS_IN_DEN
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_DEVICE_IO
</UL>

<P><STRONG><a name="[57]"></a>Ext_WDTFeed</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, clk_err.o(i.Ext_WDTFeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Ext_WDTFeed
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>Fill_Space_StrCpy</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, init.o(i.Fill_Space_StrCpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Fill_Space_StrCpy
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ram
</UL>

<P><STRONG><a name="[4e]"></a>FlashErase</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, flash.o(i.FlashErase))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_SMtr_Tab_Sts
</UL>

<P><STRONG><a name="[56]"></a>GDT_PLS_IN_DEN</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, eng_err.o(i.GDT_PLS_IN_DEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GDT_PLS_IN_DEN &rArr; GPIOPinTypeGPIOInput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntTypeSet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntDisable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENG_PLS_IN_Pr
</UL>

<P><STRONG><a name="[5]"></a>GPIOAHandler</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, interrupt_api.o(i.GPIOAHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIOAHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntStatus
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntDisable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>GPIODirModeSet</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeTimer
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2CSCL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2C
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
</UL>

<P><STRONG><a name="[5d]"></a>GPIOIntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIONHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOMHandler
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOAHandler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_DEVICE_IO
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ram
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFuction_Clk_Cfg
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDT_PLS_IN_DEN
</UL>

<P><STRONG><a name="[5c]"></a>GPIOIntDisable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntDisable))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOMHandler
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOAHandler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mea_Period_Pr
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_DEVICE_IO
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFuction_Clk_Cfg
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDT_PLS_IN_DEN
</UL>

<P><STRONG><a name="[61]"></a>GPIOIntStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIONHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOMHandler
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOAHandler
</UL>

<P><STRONG><a name="[60]"></a>GPIOIntTypeSet</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntTypeSet))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mea_Period_Pr
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_DEVICE_IO
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Gpio
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFuction_Clk_Cfg
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDT_PLS_IN_DEN
</UL>

<P><STRONG><a name="[1a]"></a>GPIOMHandler</STRONG> (Thumb, 386 bytes, Stack size 32 bytes, interrupt_api.o(i.GPIOMHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GPIOMHandler &rArr; Mea_Period_Pr
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerValueGet
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntStatus
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntDisable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mea_Period_Pr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>GPIONHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, interrupt_api.o(i.GPIONHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIONHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntStatus
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>GPIOPadConfigSet</STRONG> (Thumb, 342 bytes, Stack size 20 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeTimer
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2CSCL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2C
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Gpio
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDT_PLS_IN_DEN
</UL>

<P><STRONG><a name="[7c]"></a>GPIOPinConfigure</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIOPinConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Gpio
</UL>

<P><STRONG><a name="[58]"></a>GPIOPinRead</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mtr_Numb
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ext_WDTFeed
</UL>

<P><STRONG><a name="[63]"></a>GPIOPinTypeCAN</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeCAN))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIOPinTypeCAN &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Gpio
</UL>

<P><STRONG><a name="[5e]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIOPinTypeGPIOInput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_DEVICE_IO
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mtr_Numb
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Gpio
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFuction_Clk_Cfg
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDT_PLS_IN_DEN
</UL>

<P><STRONG><a name="[65]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mtr_Numb
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Gpio
</UL>

<P><STRONG><a name="[66]"></a>GPIOPinTypeI2C</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIOPinTypeI2C &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Gpio
</UL>

<P><STRONG><a name="[67]"></a>GPIOPinTypeI2CSCL</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeI2CSCL))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIOPinTypeI2CSCL &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Gpio
</UL>

<P><STRONG><a name="[68]"></a>GPIOPinTypeSSI</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeSSI))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIOPinTypeSSI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Gpio
</UL>

<P><STRONG><a name="[52]"></a>GPIOPinTypeTimer</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIOPinTypeTimer &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Gpio
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFuction_Clk_Cfg
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELSC_PLS_IN_DEN
</UL>

<P><STRONG><a name="[69]"></a>GPIOPinTypeUART</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIOPinTypeUART &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Gpio
</UL>

<P><STRONG><a name="[59]"></a>GPIOPinWrite</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mtr_Numb
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Gpio
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ext_WDTFeed
</UL>

<P><STRONG><a name="[6a]"></a>Init_CAN0</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, init.o(i.Init_CAN0))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Init_CAN0 &rArr; Set_MsgRam &rArr; CAN_RxMsg_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANStatusGet
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntEnable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANInit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANEnable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANDisable
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANBitRateSet
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_MsgRam
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>Init_CAN1</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, init.o(i.Init_CAN1))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Init_CAN1 &rArr; Set_CAN1MsgRam &rArr; CAN1_RxMsg_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANStatusGet
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANIntEnable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANInit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANEnable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANDisable
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANBitRateSet
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CAN1MsgRam
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>Init_Com</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, init.o(i.Init_Com))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Init_Com &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntEnable
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFIFOLevelSet
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Uart
</UL>

<P><STRONG><a name="[79]"></a>Init_DEVICE_IO</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, eng_err.o(i.Init_DEVICE_IO))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Init_DEVICE_IO &rArr; ENG_PLS_IN_Pr &rArr; ELSC_PLS_IN_DEN &rArr; GPIOPinTypeTimer &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDisable
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntTypeSet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntDisable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFuction_Clk_Cfg
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENG_PLS_IN_Pr
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ram
</UL>

<P><STRONG><a name="[7b]"></a>Init_Gpio</STRONG> (Thumb, 760 bytes, Stack size 8 bytes, init.o(i.Init_Gpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Init_Gpio &rArr; GPIOPinTypeUART &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeTimer
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2CSCL
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeI2C
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeCAN
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntTypeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>Init_Int</STRONG> (Thumb, 312 bytes, Stack size 8 bytes, init.o(i.Init_Int))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Init_Int &rArr; IntPrioritySet
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntPrioritySet
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>Init_Pll</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, init.o(i.Init_Pll))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Init_Pll &rArr; SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>Init_Ram</STRONG> (Thumb, 734 bytes, Stack size 16 bytes, init.o(i.Init_Ram))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Init_Ram &rArr; Cal_Clk_Reload &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_DEVICE_IO
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_STD_ENG_CNT_VAL
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Gp_Relaod
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mtr_Numb
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_SMtr_Tab_Sts
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_N_Buf
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Mtr_Num
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Space_StrCpy
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>Init_Ssi</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, init.o(i.Init_Ssi))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Init_Ssi &rArr; SSIConfigSetExpClk
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIEnable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>Init_SysTick</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, init.o(i.Init_SysTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Init_SysTick
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntEnable
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>Init_Timer</STRONG> (Thumb, 808 bytes, Stack size 8 bytes, init.o(i.Init_Timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Init_Timer &rArr; SysCtlPeripheralEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerMatchSet
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntEnable
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerControlStall
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerControlEvent
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>Init_Uart</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, init.o(i.Init_Uart))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Init_Uart &rArr; Init_Com &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Com
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>Init_Wdt</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, init.o(i.Init_Wdt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Init_Wdt &rArr; SysCtlPeripheralEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchdogUnlock
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchdogStallEnable
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchdogResetEnable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchdogReloadSet
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchdogIntClear
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchdogEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>IntEnable</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Int
</UL>

<P><STRONG><a name="[9a]"></a>IntMasterDisable</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterDisable
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsid
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>IntMasterEnable</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>IntPrioritySet</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, interrupt.o(i.IntPrioritySet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntPrioritySet
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Int
</UL>

<P><STRONG><a name="[7a]"></a>MFuction_Clk_Cfg</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, eng_err.o(i.MFuction_Clk_Cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MFuction_Clk_Cfg &rArr; GPIOPinTypeTimer &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerMatchSet
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntEnable
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDisable
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeTimer
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntTypeSet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntDisable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_DEVICE_IO
</UL>

<P><STRONG><a name="[62]"></a>Mea_Period_Pr</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, interrupt_api.o(i.Mea_Period_Pr))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Mea_Period_Pr
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntTypeSet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOMHandler
</UL>

<P><STRONG><a name="[84]"></a>Read_Mtr_Numb</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, init.o(i.Read_Mtr_Numb))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Read_Mtr_Numb &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ram
</UL>

<P><STRONG><a name="[89]"></a>SSIConfigSetExpClk</STRONG> (Thumb, 102 bytes, Stack size 36 bytes, ssi.o(i.SSIConfigSetExpClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SSIConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ssi
</UL>

<P><STRONG><a name="[8a]"></a>SSIEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ssi.o(i.SSIEnable))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ssi
</UL>

<P><STRONG><a name="[9e]"></a>SZPLS_Interrupt_Pr</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, interrupt_api.o(i.SZPLS_Interrupt_Pr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SZPLS_Interrupt_Pr
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerValueGet
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer5AIntHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4BIntHandler
</UL>

<P><STRONG><a name="[73]"></a>Set_CAN1MsgRam</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, usr_lib.o(i.Set_CAN1MsgRam))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Set_CAN1MsgRam &rArr; CAN1_RxMsg_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RxMsg_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN1
</UL>

<P><STRONG><a name="[70]"></a>Set_MsgRam</STRONG> (Thumb, 232 bytes, Stack size 20 bytes, usr_lib.o(i.Set_MsgRam))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Set_MsgRam &rArr; CAN_RxMsg_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_RxMsg_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN0
</UL>

<P><STRONG><a name="[82]"></a>SysCtlClockGet</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Pll
</UL>

<P><STRONG><a name="[81]"></a>SysCtlClockSet</STRONG> (Thumb, 308 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Pll
</UL>

<P><STRONG><a name="[6b]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN0
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mtr_Numb
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Wdt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Uart
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ssi
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Gpio
</UL>

<P><STRONG><a name="[8d]"></a>SysTickEnable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, systick.o(i.SysTickEnable))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysTick
</UL>

<P><STRONG><a name="[8e]"></a>SysTickIntEnable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, systick.o(i.SysTickIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysTick
</UL>

<P><STRONG><a name="[4]"></a>SysTickIntHandler</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, interrupt_api.o(i.SysTickIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTickIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharsAvail
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysTick
</UL>

<P><STRONG><a name="[a]"></a>Timer0AIntHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, interrupt_api.o(i.Timer0AIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Timer0AIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntStatus
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>Timer0BIntHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, interrupt_api.o(i.Timer0BIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Timer0BIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntStatus
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>Timer1AIntHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, interrupt_api.o(i.Timer1AIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Timer1AIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntStatus
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>Timer1BIntHandler</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, interrupt_api.o(i.Timer1BIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Timer1BIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntStatus
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>Timer2AIntHandler</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, interrupt_api.o(i.Timer2AIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Timer2AIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntStatus
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Timer2BIntHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, interrupt_api.o(i.Timer2BIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Timer2BIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntStatus
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>Timer3AIntHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, interrupt_api.o(i.Timer3AIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Timer3AIntHandler &rArr; DZPLS_Interrupt_Pr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntStatus
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DZPLS_Interrupt_Pr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>Timer3BIntHandler</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, interrupt_api.o(i.Timer3BIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Timer3BIntHandler &rArr; DZPLS_Interrupt_Pr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntStatus
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DZPLS_Interrupt_Pr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>Timer4AIntHandler</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, interrupt_api.o(i.Timer4AIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Timer4AIntHandler &rArr; DZPLS_Interrupt_Pr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntStatus
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DZPLS_Interrupt_Pr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>Timer4BIntHandler</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, interrupt_api.o(i.Timer4BIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Timer4BIntHandler &rArr; SZPLS_Interrupt_Pr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntStatus
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SZPLS_Interrupt_Pr
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DZPLS_Interrupt_Pr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>Timer5AIntHandler</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, interrupt_api.o(i.Timer5AIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Timer5AIntHandler &rArr; SZPLS_Interrupt_Pr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntStatus
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerIntClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SZPLS_Interrupt_Pr
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DZPLS_Interrupt_Pr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>TimerConfigure</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, timer.o(i.TimerConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer
</UL>

<P><STRONG><a name="[53]"></a>TimerControlEvent</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, timer.o(i.TimerControlEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TimerControlEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELSC_PLS_IN_DEN
</UL>

<P><STRONG><a name="[91]"></a>TimerControlStall</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, timer.o(i.TimerControlStall))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer
</UL>

<P><STRONG><a name="[46]"></a>TimerDisable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(i.TimerDisable))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SZPLS_Interrupt_Pr
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_DEVICE_IO
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFuction_Clk_Cfg
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELSC_PLS_IN_DEN
</UL>

<P><STRONG><a name="[4a]"></a>TimerEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(i.TimerEnable))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer5AIntHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4BIntHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4AIntHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer3BIntHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer3AIntHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2BIntHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2AIntHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1BIntHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1AIntHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0BIntHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0AIntHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SZPLS_Interrupt_Pr
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DZPLS_Interrupt_Pr
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFuction_Clk_Cfg
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELSC_PLS_IN_DEN
</UL>

<P><STRONG><a name="[49]"></a>TimerIntClear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, timer.o(i.TimerIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer5AIntHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4BIntHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4AIntHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer3BIntHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer3AIntHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2BIntHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2AIntHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1BIntHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1AIntHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0BIntHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0AIntHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFuction_Clk_Cfg
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELSC_PLS_IN_DEN
</UL>

<P><STRONG><a name="[54]"></a>TimerIntEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timer.o(i.TimerIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFuction_Clk_Cfg
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELSC_PLS_IN_DEN
</UL>

<P><STRONG><a name="[a2]"></a>TimerIntStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timer.o(i.TimerIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer5AIntHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4BIntHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4AIntHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer3BIntHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer3AIntHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2BIntHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2AIntHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1BIntHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1AIntHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0BIntHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0AIntHandler
</UL>

<P><STRONG><a name="[47]"></a>TimerLoadSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timer.o(i.TimerLoadSet))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer5AIntHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4BIntHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer4AIntHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer3BIntHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer3AIntHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2BIntHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2AIntHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1BIntHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1AIntHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0BIntHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0AIntHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SZPLS_Interrupt_Pr
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DZPLS_Interrupt_Pr
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFuction_Clk_Cfg
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELSC_PLS_IN_DEN
</UL>

<P><STRONG><a name="[48]"></a>TimerMatchSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timer.o(i.TimerMatchSet))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_Clk_Reload
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MFuction_Clk_Cfg
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ELSC_PLS_IN_DEN
</UL>

<P><STRONG><a name="[50]"></a>TimerValueGet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(i.TimerValueGet))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOMHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SZPLS_Interrupt_Pr
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DZPLS_Interrupt_Pr
</UL>

<P><STRONG><a name="[6]"></a>UART0IntHandler</STRONG> (Thumb, 286 bytes, Stack size 16 bytes, interrupt_api.o(i.UART0IntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART0IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntStatus
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntClear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharsAvail
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>UART1IntHandler</STRONG> (Thumb, 286 bytes, Stack size 16 bytes, interrupt_api.o(i.UART1IntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntStatus
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntClear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharsAvail
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART3IntHandler</STRONG> (Thumb, 286 bytes, Stack size 16 bytes, interrupt_api.o(i.UART3IntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART3IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntStatus
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntClear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharsAvail
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART5IntHandler</STRONG> (Thumb, 286 bytes, Stack size 16 bytes, interrupt_api.o(i.UART5IntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART5IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntStatus
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntClear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharsAvail
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART6IntHandler</STRONG> (Thumb, 286 bytes, Stack size 16 bytes, interrupt_api.o(i.UART6IntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART6IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntStatus
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntClear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharsAvail
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>UARTCharGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(i.UARTCharGet))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6IntHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5IntHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3IntHandler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1IntHandler
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0IntHandler
</UL>

<P><STRONG><a name="[a5]"></a>UARTCharPut</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6IntHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5IntHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3IntHandler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1IntHandler
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0IntHandler
</UL>

<P><STRONG><a name="[a1]"></a>UARTCharsAvail</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharsAvail))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6IntHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5IntHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3IntHandler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1IntHandler
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0IntHandler
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[76]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UARTConfigSetExpClk
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEnable
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Com
</UL>

<P><STRONG><a name="[a7]"></a>UARTDisable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart.o(i.UARTDisable))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>

<P><STRONG><a name="[a8]"></a>UARTEnable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(i.UARTEnable))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>

<P><STRONG><a name="[77]"></a>UARTFIFOLevelSet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(i.UARTFIFOLevelSet))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Com
</UL>

<P><STRONG><a name="[a4]"></a>UARTIntClear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(i.UARTIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6IntHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5IntHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3IntHandler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1IntHandler
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0IntHandler
</UL>

<P><STRONG><a name="[78]"></a>UARTIntEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(i.UARTIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Com
</UL>

<P><STRONG><a name="[a3]"></a>UARTIntStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6IntHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5IntHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3IntHandler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1IntHandler
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0IntHandler
</UL>

<P><STRONG><a name="[87]"></a>Update_Mtr_Num</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, disp.o(i.Update_Mtr_Num))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ram
</UL>

<P><STRONG><a name="[4c]"></a>Update_N_Buf</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, disp.o(i.Update_N_Buf))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cal_STD_ENG_CNT_VAL
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ram
</UL>

<P><STRONG><a name="[a9]"></a>WDTFeed</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usr_lib.o(i.WDTFeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WDTFeed
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchdogReloadSet
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchdogReloadGet
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9]"></a>WatchDogHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, interrupt_api.o(i.WatchDogHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WatchDogHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchdogIntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>WatchdogEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, watchdog.o(i.WatchdogEnable))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Wdt
</UL>

<P><STRONG><a name="[95]"></a>WatchdogIntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, watchdog.o(i.WatchdogIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogHandler
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Wdt
</UL>

<P><STRONG><a name="[aa]"></a>WatchdogReloadGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, watchdog.o(i.WatchdogReloadGet))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDTFeed
</UL>

<P><STRONG><a name="[96]"></a>WatchdogReloadSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, watchdog.o(i.WatchdogReloadSet))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDTFeed
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Wdt
</UL>

<P><STRONG><a name="[97]"></a>WatchdogResetEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, watchdog.o(i.WatchdogResetEnable))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Wdt
</UL>

<P><STRONG><a name="[98]"></a>WatchdogStallEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, watchdog.o(i.WatchdogStallEnable))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Wdt
</UL>

<P><STRONG><a name="[94]"></a>WatchdogUnlock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, watchdog.o(i.WatchdogUnlock))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Wdt
</UL>

<P><STRONG><a name="[ab]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c9]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[85]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ram
</UL>

<P><STRONG><a name="[ca]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[cb]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[cc]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[cd]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[ce]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1c]"></a>main</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = main &rArr; Init_Ram &rArr; Cal_Clk_Reload &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_CAN0
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterDisable
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDTFeed
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Wdt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Uart
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SysTick
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ssi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Ram
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Int
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Gpio
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Pll
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ext_WDTFeed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ac]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[b0]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[af]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1d]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
