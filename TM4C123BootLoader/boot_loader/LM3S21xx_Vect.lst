


ARM Macro Assembler    Page 1 


    1 00000000         ;******************** (C) COPYRIGHT 2008 LUMINARY LM3S21
                       xx ********************
    2 00000000         ;* File Name          : LM3S21xx_Vect.s
    3 00000000         ;* Author             : ’≈¡¶’Û
    4 00000000         ;* ÷–∂œœÚ¡ø±Ì
    5 00000000         ;*******************************************************
                       ************************/
    6 00000000         
    7 00000000         ;*******************************************************
                       ***********************
    8 00000000         ;
    9 00000000         ; <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   10 00000000         ;
   11 00000000         ;*******************************************************
                       ***********************
   12 00000000 00000200 
                       Stack   EQU              0x00000200
   13 00000000 00004000 
                       RAM_SIZE
                               EQU              0x4000
   14 00000000         ;*******************************************************
                       ***********************
   15 00000000         ;
   16 00000000         ; <o> Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   17 00000000         ;
   18 00000000         ;*******************************************************
                       ***********************
   19 00000000 00000000 
                       Heap    EQU              0x00000000
   20 00000000         
   21 00000000         ;*******************************************************
                       ***********************
   22 00000000         ;
   23 00000000         ; Allocate space for the stack.
   24 00000000         ;
   25 00000000         ;*******************************************************
                       ***********************
   26 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   27 00000000         StackMem
   28 00000000                 SPACE            Stack
   29 00000200         __initial_sp
   30 00000200         
   31 00000200         ;*******************************************************
                       ***********************
   32 00000200         ;
   33 00000200         ; Allocate space for the heap.
   34 00000200         ;
   35 00000200         ;*******************************************************
                       ***********************
   36 00000200                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   37 00000000         __heap_base
   38 00000000         HeapMem
   39 00000000                 SPACE            Heap
   40 00000000         __heap_limit
   41 00000000         
   42 00000000         ;*******************************************************
                       ***********************



ARM Macro Assembler    Page 2 


   43 00000000         ;
   44 00000000         ; Indicate that the code in this file preserves 8-byte a
                       lignment of the stack.
   45 00000000         ;
   46 00000000         ;*******************************************************
                       ***********************
   47 00000000                 PRESERVE8
   48 00000000 400FE034 
                       SYSCTL_LDOPCTL
                               equ              0x400FE034
   49 00000000 0000001B 
                       SYSCTL_LDOPCTL_2_75V
                               equ              0x0000001B
   50 00000000 400FE060 
                       SYSCTL_RCC
                               equ              0x400FE060
   51 00000000 00000000 
                       SYSCTL_RCC_OSCSRC_MAIN
                               equ              0x00000000
   52 00000000 00000380 
                       SYSCTL_RCC_XTAL_8MHZ
                               EQU              0x00000380  ; Using a 8MHz crys
                                                            tal
   53 00000000 00000002 
                       SYSCTL_RCC_IOSCDIS
                               EQU              0x00000002  ; Internal oscillat
                                                            or disable
   54 00000000         
   55 00000000         ;*******************************************************
                       ***********************
   56 00000000         ;
   57 00000000         ; Place code into the reset code section.
   58 00000000         ;
   59 00000000         ;*******************************************************
                       ***********************
   60 00000000                 AREA             RESET, CODE, READONLY
   61 00000000                 THUMB
   62 00000000         ;*******************************************************
                       ***********************
   63 00000000         ;
   64 00000000         ; External declaration for the interrupt handler used by
                        the application.
   65 00000000         ;
   66 00000000         ;*******************************************************
                       ***********************
   67 00000000                 EXTERN           WatchDogHandler
   68 00000000                 EXTERN           SysTickIntHandler
   69 00000000                 EXTERN           ADC0Handler
   70 00000000                 EXTERN           UART0IntHandler
   71 00000000                 EXTERN           UART1IntHandler
   72 00000000                 EXTERN           Timer0AIntHandler
   73 00000000                 EXTERN           Timer0BIntHandler
   74 00000000                 EXTERN           Timer1AIntHandler
   75 00000000                 EXTERN           Timer1BIntHandler
   76 00000000                 EXTERN           Timer2AIntHandler
   77 00000000                 EXTERN           Timer2BIntHandler
   78 00000000                 EXTERN           CANHandler
   79 00000000                 EXTERN           GPIOBHandler
   80 00000000                 EXTERN           GPIOCHandler



ARM Macro Assembler    Page 3 


   81 00000000                 EXTERN           GPIOFHandler
   82 00000000         ;*******************************************************
                       ***********************
   83 00000000         ;  
   84 00000000         ; The vector table.
   85 00000000         ;
   86 00000000         ;*******************************************************
                       ***********************
   87 00000000                 EXPORT           __Vectors
   88 00000000         __Vectors
   89 00000000 00000200        DCD              StackMem + Stack ; Top of Stack
                                                            
   90 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   91 00000008 00000000        DCD              NmiSR       ; NMI Handler
   92 0000000C 00000000        DCD              FaultISR    ; Hard Fault Handle
                                                            r
   93 00000010 00000000        DCD              IntDefaultHandler 
                                                            ; MPU Fault Handler
                                                            
   94 00000014 00000000        DCD              IntDefaultHandler 
                                                            ; Bus Fault Handler
                                                            
   95 00000018 00000000        DCD              IntDefaultHandler ; Usage Fault
                                                             Handler
   96 0000001C 00000000        DCD              0           ; Reserved
   97 00000020 00000000        DCD              0           ; Reserved
   98 00000024 00000000        DCD              0           ; Reserved
   99 00000028 00000000        DCD              0           ; Reserved
  100 0000002C 00000000        DCD              IntDefaultHandler 
                                                            ; SVCall Handler
  101 00000030 00000000        DCD              IntDefaultHandler ; Debug Monit
                                                            or Handler
  102 00000034 00000000        DCD              0           ; Reserved
  103 00000038 00000000        DCD              IntDefaultHandler 
                                                            ; PendSV Handler
  104 0000003C 00000000        DCD              SysTickIntHandler 
                                                            ; SysTick Handler
  105 00000040 00000000        DCD              IntDefaultHandler ; GPIO Port A
                                                            
  106 00000044 00000000        DCD              GPIOBHandler ;IntDefaultHandler
                                                            ; GPIO Port B π‚µ„Õ
                                                            ∑¬ˆ≥Â÷–∂œ¥¶¿Ì
  107 00000048 00000000        DCD              GPIOCHandler ;IntDefaultHandler
                                                            ; GPIO Port C ∞¥º¸÷
                                                            –∂œ
  108 0000004C 00000000        DCD              IntDefaultHandler ; GPIO Port D
                                                            
  109 00000050 00000000        DCD              IntDefaultHandler ; GPIO Port E
                                                            
  110 00000054 00000000        DCD              UART0IntHandler ; UART0
  111 00000058 00000000        DCD              UART1IntHandler ; UART1
  112 0000005C 00000000        DCD              IntDefaultHandler ; SSI
  113 00000060 00000000        DCD              IntDefaultHandler ; I2C
  114 00000064 00000000        DCD              IntDefaultHandler ; PWM Fault
  115 00000068 00000000        DCD              IntDefaultHandler 
                                                            ; PWM Generator 0
  116 0000006C 00000000        DCD              IntDefaultHandler 
                                                            ; PWM Generator 1
  117 00000070 00000000        DCD              IntDefaultHandler 



ARM Macro Assembler    Page 4 


                                                            ; PWM Generator 2
  118 00000074 00000000        DCD              IntDefaultHandler ; Quadrature 
                                                            Encoder
  119 00000078 00000000        DCD              ADC0Handler ; ADC Sequence 0
  120 0000007C 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 1
  121 00000080 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 2
  122 00000084 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 3
  123 00000088 00000000        DCD              WatchDogHandler ; Watchdog
  124 0000008C 00000000        DCD              Timer0AIntHandler ; Timer 0A
  125 00000090 00000000        DCD              Timer0BIntHandler ; Timer 0B
  126 00000094 00000000        DCD              Timer1AIntHandler ; Timer 1A
  127 00000098 00000000        DCD              Timer1BIntHandler ; Timer 1B
  128 0000009C 00000000        DCD              Timer2AIntHandler ; Timer 2A
  129 000000A0 00000000        DCD              Timer2BIntHandler ; Timer 2B
  130 000000A4 00000000        DCD              IntDefaultHandler ; Comp 0
  131 000000A8 00000000        DCD              IntDefaultHandler ; Comp 1
  132 000000AC 00000000        DCD              IntDefaultHandler ; Comp 2
  133 000000B0 00000000        DCD              IntDefaultHandler 
                                                            ; System Control
  134 000000B4 00000000        DCD              IntDefaultHandler 
                                                            ; Flash Control
  135 000000B8 00000000        DCD              GPIOFHandler ; GPIO Port F  –Ë¡
                                                            ø÷‹∆⁄¬ˆ≥Â÷–∂œ  ±∂ŒÕ
                                                            ∂«– ∫œ’¢¬ˆ≥Â
  136 000000BC 00000000        DCD              IntDefaultHandler ; GPIO Port G
                                                            
  137 000000C0 00000000        DCD              IntDefaultHandler ; GPIO Port H
                                                            
  138 000000C4 00000000        DCD              IntDefaultHandler 
                                                            ; UART2 Rx and Tx
  139 000000C8 00000000        DCD              IntDefaultHandler 
                                                            ; SSI1 Rx and Tx
  140 000000CC 00000000        DCD              IntDefaultHandler ; Timer 3 sub
                                                            timer A
  141 000000D0 00000000        DCD              IntDefaultHandler ; Timer 3 sub
                                                            timer B
  142 000000D4 00000000        DCD              IntDefaultHandler ; I2C1 Master
                                                             and Slave
  143 000000D8 00000000        DCD              IntDefaultHandler ; Quadrature 
                                                            Encoder 1
  144 000000DC 00000000        DCD              CANHandler  ; CAN0
  145 000000E0 00000000        DCD              IntDefaultHandler ; CAN1
  146 000000E4 00000000        DCD              IntDefaultHandler ; CAN2
  147 000000E8 00000000        DCD              IntDefaultHandler ; Ethernet
  148 000000EC 00000000        DCD              IntDefaultHandler ; Hibernate
  149 000000F0 00000000        DCD              IntDefaultHandler ; USB0
  150 000000F4 00000000        DCD              IntDefaultHandler 
                                                            ; PWM Generator 3
  151 000000F8 00000000        DCD              IntDefaultHandler ; uDMA Softwa
                                                            re Transfer
  152 000000FC 00000000        DCD              IntDefaultHandler ; uDMA Error
  153 00000100         
  154 00000100         ;*******************************************************
                       ***********************
  155 00000100         ;
  156 00000100         ; This is the code that gets called when the processor f



ARM Macro Assembler    Page 5 


                       irst starts execution
  157 00000100         ; following a reset event.
  158 00000100         ;
  159 00000100         ;*******************************************************
                       ***********************
  160 00000100                 EXPORT           Reset_Handler
  161 00000100         Reset_Handler
  162 00000100         ;
  163 00000100         ; Call the C library enty point that handles startup.  T
                       his will copy
  164 00000100         ; the .data section initializers from flash to SRAM and 
                       zero fill the
  165 00000100         ; .bss section.
  166 00000100         ;
  167 00000100                 IMPORT           __main
  168 00000100         ;…Ë÷√ƒ⁄∫ÀµÁ—πŒ™2.75V        
  169 00000100 4811            ldr              r0,=SYSCTL_LDOPCTL ;
  170 00000102 6801            ldr              r1,[r0]
  171 00000104 F021 013F       and              r1,#0xFFFFFFC0
  172 00000108 F041 011B       orr              r1,#SYSCTL_LDOPCTL_2_75V 
                                                            ;ƒ⁄∫ÀµÁ—π…Ë÷√r2
  173 0000010C 6001            str              r1,[r0]
  174 0000010E         ;…Ë÷√π§◊˜ ±÷” π§◊˜”⁄æß’Ò∆µ¬        
  175 0000010E 480F            ldr              r0,=SYSCTL_RCC
  176 00000110 6801            ldr              r1,[r0]
  177 00000112 F240 32F3       movw             r2,#0x003f3
  178 00000116 F442 2280       orr              r2,#0x40000
  179 0000011A EA6F 0202       mvn              r2,r2
  180 0000011E EA01 0102       and              r1,r2
  181 00000122 F441 7160       orr              r1,#SYSCTL_RCC_XTAL_8MHZ
  182 00000126 F041 0102       orr              r1,#SYSCTL_RCC_IOSCDIS
  183 0000012A 6001            str              r1,[r0]
  184 0000012C         
  185 0000012C 2000            movs             r0, #0x00000000
  186 0000012E F04F 5100       ldr              r1, =0x20000000
  187 00000132 F501 4280       add              r2,r1, #RAM_SIZE
  188 00000136         zero_loop
  189 00000136 F841 0B04       str              r0, [r1], #4
  190 0000013A 4291            cmp              r1, r2
  191 0000013C DBFB            blt              zero_loop
  192 0000013E         
  193 0000013E F7FF BFFE       B                __main
  194 00000142         
  195 00000142         ;*******************************************************
                       ***********************
  196 00000142         ;
  197 00000142         ; This is the code that gets called when the processor r
                       eceives a NMI.  This
  198 00000142         ; simply enters an infinite loop, preserving the system 
                       state for examination
  199 00000142         ; by a debugger.
  200 00000142         ;
  201 00000142         ;*******************************************************
                       ***********************
  202 00000142         NmiSR
  203 00000142 E7FE            B                NmiSR
  204 00000144         
  205 00000144         ;*******************************************************
                       ***********************



ARM Macro Assembler    Page 6 


  206 00000144         ;
  207 00000144         ; This is the code that gets called when the processor r
                       eceives a fault
  208 00000144         ; interrupt.  This simply enters an infinite loop, prese
                       rving the system state
  209 00000144         ; for examination by a debugger.
  210 00000144         ;
  211 00000144         ;*******************************************************
                       ***********************
  212 00000144         FaultISR
  213 00000144 E7FE            B                FaultISR
  214 00000146         
  215 00000146         ;*******************************************************
                       ***********************
  216 00000146         ;
  217 00000146         ; This is the code that gets called when the processor r
                       eceives an unexpected
  218 00000146         ; interrupt.  This simply enters an infinite loop, prese
                       rving the system state
  219 00000146         ; for examination by a debugger.
  220 00000146         ;
  221 00000146         ;*******************************************************
                       ***********************
  222 00000146         IntDefaultHandler
  223 00000146 E7FE            B                IntDefaultHandler
  224 00000148         
  225 00000148         ;*******************************************************
                       ***********************
  226 00000148         ;
  227 00000148         ; Make sure the end of this section is aligned.
  228 00000148         ;
  229 00000148         ;*******************************************************
                       ***********************
  230 00000148                 ALIGN
  231 00000148         
  232 00000148         ;*******************************************************
                       ***********************
  233 00000148         ;
  234 00000148         ; Some code in the normal code section for initializing 
                       the heap and stack.
  235 00000148         ;
  236 00000148         ;*******************************************************
                       ***********************
  237 00000148 400FE034 
              400FE060         AREA             |.text|, CODE, READONLY
  238 00000000         
  239 00000000         ;*******************************************************
                       ***********************
  240 00000000         ;
  241 00000000         ; The function expected of the C library startup code fo
                       r defining the stack
  242 00000000         ; and heap memory locations.  For the C library version 
                       of the startup code,
  243 00000000         ; provide this function so that the C library initializa
                       tion code can find out
  244 00000000         ; the location of the stack and heap.
  245 00000000         ;
  246 00000000         ;*******************************************************
                       ***********************



ARM Macro Assembler    Page 7 


  247 00000000                 IF               :DEF: __MICROLIB
  252 00000000                 IMPORT           __use_two_region_memory
  253 00000000                 EXPORT           __user_initial_stackheap
  254 00000000         __user_initial_stackheap
  255 00000000 4802            LDR              R0, =HeapMem
  256 00000002 4903            LDR              R1, =(StackMem + Stack)
  257 00000004 4A01            LDR              R2, =(HeapMem + Heap)
  258 00000006 4B03            LDR              R3, =StackMem
  259 00000008 4770            BX               LR
  260 0000000A                 ENDIF
  261 0000000A         
  262 0000000A         ;*******************************************************
                       ***********************
  263 0000000A         ;
  264 0000000A         ; Make sure the end of this section is aligned.
  265 0000000A         ;
  266 0000000A         ;*******************************************************
                       ***********************
  267 0000000A 00 00           ALIGN
  268 0000000C         
  269 0000000C         ;*******************************************************
                       ***********************
  270 0000000C         ;
  271 0000000C         ; Tell the assembler that we're done.
  272 0000000C         ;
  273 0000000C         ;*******************************************************
                       ***********************
  274 0000000C                 END
              00000000 
              00000200 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\LM3S21
xx_Vect.d -o.\LM3S21xx_Vect.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Includ
e -IC:\Keil\ARM\Inc\Luminary --list=.\LM3S21xx_Vect.lst D:\zlz\–£—ÈÃ®∏ƒ‘Ï\progr
am\Lm3s2139-V1.0.3\LM3S21xx_Vect.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 26 in file D:\zlz\
   Uses
      None
Comment: STACK unused
StackMem 00000000

Symbol: StackMem
   Definitions
      At line 27 in file D:\zlz\
   Uses
      At line 89 in file D:\zlz\
      At line 256 in file D:\zlz\
      At line 258 in file D:\zlz\

__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 29 in file D:\zlz\
   Uses
      None
Comment: __initial_sp unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 36 in file D:\zlz\
   Uses
      None
Comment: HEAP unused
HeapMem 00000000

Symbol: HeapMem
   Definitions
      At line 38 in file D:\zlz\
   Uses
      At line 255 in file D:\zlz\
      At line 257 in file D:\zlz\

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 37 in file D:\zlz\
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 40 in file D:\zlz\
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FaultISR 00000144

Symbol: FaultISR
   Definitions
      At line 212 in file D:\zlz\
   Uses
      At line 92 in file D:\zlz\
      At line 213 in file D:\zlz\

IntDefaultHandler 00000146

Symbol: IntDefaultHandler
   Definitions
      At line 222 in file D:\zlz\
   Uses
      At line 93 in file D:\zlz\
      At line 94 in file D:\zlz\
      At line 95 in file D:\zlz\
      At line 100 in file D:\zlz\
      At line 101 in file D:\zlz\
      At line 103 in file D:\zlz\
      At line 105 in file D:\zlz\
      At line 108 in file D:\zlz\
      At line 109 in file D:\zlz\
      At line 112 in file D:\zlz\
      At line 113 in file D:\zlz\
      At line 114 in file D:\zlz\
      At line 115 in file D:\zlz\
      At line 116 in file D:\zlz\
      At line 117 in file D:\zlz\
      At line 118 in file D:\zlz\
      At line 120 in file D:\zlz\
      At line 121 in file D:\zlz\
      At line 122 in file D:\zlz\
      At line 130 in file D:\zlz\
      At line 131 in file D:\zlz\
      At line 132 in file D:\zlz\
      At line 133 in file D:\zlz\
      At line 134 in file D:\zlz\
      At line 136 in file D:\zlz\
      At line 137 in file D:\zlz\
      At line 138 in file D:\zlz\
      At line 139 in file D:\zlz\
      At line 140 in file D:\zlz\
      At line 141 in file D:\zlz\
      At line 142 in file D:\zlz\
      At line 143 in file D:\zlz\
      At line 145 in file D:\zlz\
      At line 146 in file D:\zlz\
      At line 147 in file D:\zlz\
      At line 148 in file D:\zlz\
      At line 149 in file D:\zlz\
      At line 150 in file D:\zlz\
      At line 151 in file D:\zlz\
      At line 152 in file D:\zlz\
      At line 223 in file D:\zlz\

NmiSR 00000142




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: NmiSR
   Definitions
      At line 202 in file D:\zlz\
   Uses
      At line 91 in file D:\zlz\
      At line 203 in file D:\zlz\

RESET 00000000

Symbol: RESET
   Definitions
      At line 60 in file D:\zlz\
   Uses
      None
Comment: RESET unused
Reset_Handler 00000100

Symbol: Reset_Handler
   Definitions
      At line 161 in file D:\zlz\
   Uses
      At line 90 in file D:\zlz\
      At line 160 in file D:\zlz\

__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 88 in file D:\zlz\
   Uses
      At line 87 in file D:\zlz\
Comment: __Vectors used once
zero_loop 00000136

Symbol: zero_loop
   Definitions
      At line 188 in file D:\zlz\
   Uses
      At line 191 in file D:\zlz\
Comment: zero_loop used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 237 in file D:\zlz\
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 254 in file D:\zlz\
   Uses
      At line 253 in file D:\zlz\
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap 00000000

Symbol: Heap
   Definitions
      At line 19 in file D:\zlz\
   Uses
      At line 39 in file D:\zlz\
      At line 257 in file D:\zlz\

RAM_SIZE 00004000

Symbol: RAM_SIZE
   Definitions
      At line 13 in file D:\zlz\
   Uses
      At line 187 in file D:\zlz\
Comment: RAM_SIZE used once
SYSCTL_LDOPCTL 400FE034

Symbol: SYSCTL_LDOPCTL
   Definitions
      At line 48 in file D:\zlz\
   Uses
      At line 169 in file D:\zlz\
Comment: SYSCTL_LDOPCTL used once
SYSCTL_LDOPCTL_2_75V 0000001B

Symbol: SYSCTL_LDOPCTL_2_75V
   Definitions
      At line 49 in file D:\zlz\
   Uses
      At line 172 in file D:\zlz\
Comment: SYSCTL_LDOPCTL_2_75V used once
SYSCTL_RCC 400FE060

Symbol: SYSCTL_RCC
   Definitions
      At line 50 in file D:\zlz\
   Uses
      At line 175 in file D:\zlz\
Comment: SYSCTL_RCC used once
SYSCTL_RCC_IOSCDIS 00000002

Symbol: SYSCTL_RCC_IOSCDIS
   Definitions
      At line 53 in file D:\zlz\
   Uses
      At line 182 in file D:\zlz\
Comment: SYSCTL_RCC_IOSCDIS used once
SYSCTL_RCC_OSCSRC_MAIN 00000000

Symbol: SYSCTL_RCC_OSCSRC_MAIN
   Definitions
      At line 51 in file D:\zlz\
   Uses
      None
Comment: SYSCTL_RCC_OSCSRC_MAIN unused
SYSCTL_RCC_XTAL_8MHZ 00000380




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: SYSCTL_RCC_XTAL_8MHZ
   Definitions
      At line 52 in file D:\zlz\
   Uses
      At line 181 in file D:\zlz\
Comment: SYSCTL_RCC_XTAL_8MHZ used once
Stack 00000200

Symbol: Stack
   Definitions
      At line 12 in file D:\zlz\
   Uses
      At line 28 in file D:\zlz\
      At line 89 in file D:\zlz\
      At line 256 in file D:\zlz\

9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ADC0Handler 00000000

Symbol: ADC0Handler
   Definitions
      At line 69 in file D:\zlz\
   Uses
      At line 119 in file D:\zlz\
Comment: ADC0Handler used once
CANHandler 00000000

Symbol: CANHandler
   Definitions
      At line 78 in file D:\zlz\
   Uses
      At line 144 in file D:\zlz\
Comment: CANHandler used once
GPIOBHandler 00000000

Symbol: GPIOBHandler
   Definitions
      At line 79 in file D:\zlz\
   Uses
      At line 106 in file D:\zlz\
Comment: GPIOBHandler used once
GPIOCHandler 00000000

Symbol: GPIOCHandler
   Definitions
      At line 80 in file D:\zlz\
   Uses
      At line 107 in file D:\zlz\
Comment: GPIOCHandler used once
GPIOFHandler 00000000

Symbol: GPIOFHandler
   Definitions
      At line 81 in file D:\zlz\
   Uses
      At line 135 in file D:\zlz\
Comment: GPIOFHandler used once
SysTickIntHandler 00000000

Symbol: SysTickIntHandler
   Definitions
      At line 68 in file D:\zlz\
   Uses
      At line 104 in file D:\zlz\
Comment: SysTickIntHandler used once
Timer0AIntHandler 00000000

Symbol: Timer0AIntHandler
   Definitions
      At line 72 in file D:\zlz\
   Uses
      At line 124 in file D:\zlz\
Comment: Timer0AIntHandler used once
Timer0BIntHandler 00000000

Symbol: Timer0BIntHandler



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 73 in file D:\zlz\
   Uses
      At line 125 in file D:\zlz\
Comment: Timer0BIntHandler used once
Timer1AIntHandler 00000000

Symbol: Timer1AIntHandler
   Definitions
      At line 74 in file D:\zlz\
   Uses
      At line 126 in file D:\zlz\
Comment: Timer1AIntHandler used once
Timer1BIntHandler 00000000

Symbol: Timer1BIntHandler
   Definitions
      At line 75 in file D:\zlz\
   Uses
      At line 127 in file D:\zlz\
Comment: Timer1BIntHandler used once
Timer2AIntHandler 00000000

Symbol: Timer2AIntHandler
   Definitions
      At line 76 in file D:\zlz\
   Uses
      At line 128 in file D:\zlz\
Comment: Timer2AIntHandler used once
Timer2BIntHandler 00000000

Symbol: Timer2BIntHandler
   Definitions
      At line 77 in file D:\zlz\
   Uses
      At line 129 in file D:\zlz\
Comment: Timer2BIntHandler used once
UART0IntHandler 00000000

Symbol: UART0IntHandler
   Definitions
      At line 70 in file D:\zlz\
   Uses
      At line 110 in file D:\zlz\
Comment: UART0IntHandler used once
UART1IntHandler 00000000

Symbol: UART1IntHandler
   Definitions
      At line 71 in file D:\zlz\
   Uses
      At line 111 in file D:\zlz\
Comment: UART1IntHandler used once
WatchDogHandler 00000000

Symbol: WatchDogHandler
   Definitions
      At line 67 in file D:\zlz\
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 123 in file D:\zlz\
Comment: WatchDogHandler used once
__main 00000000

Symbol: __main
   Definitions
      At line 167 in file D:\zlz\
   Uses
      At line 193 in file D:\zlz\
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 252 in file D:\zlz\
   Uses
      None
Comment: __use_two_region_memory unused
17 symbols
378 symbols in table
